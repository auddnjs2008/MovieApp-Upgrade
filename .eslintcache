[{"C:\\React\\mwflix-upgrade\\src\\index.js":"1","C:\\React\\mwflix-upgrade\\src\\component\\App.js":"2","C:\\React\\mwflix-upgrade\\src\\component\\Router.js":"3","C:\\React\\mwflix-upgrade\\src\\routes\\Drama.js":"4","C:\\React\\mwflix-upgrade\\src\\routes\\Movie.js":"5","C:\\React\\mwflix-upgrade\\src\\component\\GlobalStyle.js":"6","C:\\React\\mwflix-upgrade\\src\\component\\Navigator.js":"7","C:\\React\\mwflix-upgrade\\src\\routes\\MyPage.js":"8","C:\\React\\mwflix-upgrade\\src\\routes\\Auth.js":"9","C:\\React\\mwflix-upgrade\\src\\store\\index.js":"10","C:\\React\\mwflix-upgrade\\src\\store\\configure.js":"11","C:\\React\\mwflix-upgrade\\src\\store\\modules\\index.js":"12","C:\\React\\mwflix-upgrade\\src\\store\\modules\\User.js":"13","C:\\React\\mwflix-upgrade\\src\\store\\modules\\Error.js":"14","C:\\React\\mwflix-upgrade\\src\\fbase.js":"15","C:\\React\\mwflix-upgrade\\src\\component\\SocialLogin.js":"16","C:\\React\\mwflix-upgrade\\src\\component\\ErrorMessage.js":"17","C:\\React\\mwflix-upgrade\\src\\api.js":"18","C:\\React\\mwflix-upgrade\\src\\routes\\Detail.js":"19","C:\\React\\mwflix-upgrade\\src\\component\\SearchForm.js":"20","C:\\React\\mwflix-upgrade\\src\\store\\modules\\Search.js":"21","C:\\React\\mwflix-upgrade\\src\\component\\SearchPage.js":"22","C:\\React\\mwflix-upgrade\\src\\routes\\Actor.js":"23","C:\\React\\mwflix-upgrade\\src\\store\\modules\\MyList.js":"24"},{"size":280,"mtime":1611910108744,"results":"25","hashOfConfig":"26"},{"size":906,"mtime":1611910136928,"results":"27","hashOfConfig":"26"},{"size":1296,"mtime":1611488574990,"results":"28","hashOfConfig":"26"},{"size":21123,"mtime":1612165435969,"results":"29","hashOfConfig":"26"},{"size":21964,"mtime":1612165437542,"results":"30","hashOfConfig":"26"},{"size":446,"mtime":1611274274115,"results":"31","hashOfConfig":"26"},{"size":1935,"mtime":1612143033069,"results":"32","hashOfConfig":"26"},{"size":15969,"mtime":1612165516318,"results":"33","hashOfConfig":"26"},{"size":2582,"mtime":1611735542497,"results":"34","hashOfConfig":"26"},{"size":67,"mtime":1610624134605,"results":"35","hashOfConfig":"26"},{"size":190,"mtime":1610623972828,"results":"36","hashOfConfig":"26"},{"size":244,"mtime":1611541053511,"results":"37","hashOfConfig":"26"},{"size":438,"mtime":1610627373551,"results":"38","hashOfConfig":"26"},{"size":402,"mtime":1610626372439,"results":"39","hashOfConfig":"26"},{"size":652,"mtime":1611560037725,"results":"40","hashOfConfig":"26"},{"size":1480,"mtime":1610670309728,"results":"41","hashOfConfig":"26"},{"size":474,"mtime":1610671354964,"results":"42","hashOfConfig":"26"},{"size":1846,"mtime":1612186037915,"results":"43","hashOfConfig":"26"},{"size":26327,"mtime":1612186631590,"results":"44","hashOfConfig":"26"},{"size":1640,"mtime":1612142969312,"results":"45","hashOfConfig":"26"},{"size":404,"mtime":1610880804948,"results":"46","hashOfConfig":"26"},{"size":7310,"mtime":1611539937077,"results":"47","hashOfConfig":"26"},{"size":3011,"mtime":1611538158872,"results":"48","hashOfConfig":"26"},{"size":774,"mtime":1611733713887,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"88ab01",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"52"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"52"},"C:\\React\\mwflix-upgrade\\src\\index.js",[],["113","114"],"C:\\React\\mwflix-upgrade\\src\\component\\App.js",["115","116"],"import APPRouter from \"./Router\";\nimport GlobalStyle from \"./GlobalStyle\";\nimport Navigator from \"./Navigator\";\nimport { useEffect, useState } from \"react\";\nimport { authService } from \"../fbase\";\nimport { connect } from \"react-redux\";\nimport { userActionCreator } from \"../store/modules/User\";\n\nfunction App({ logIn, logOut }) {\n  const [init, setInit] = useState(false);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        logIn(user);\n      } else {\n        logOut();\n      }\n      setInit(true);\n    });\n  }, []);\n\n  return (\n    <>\n      {init ? <APPRouter /> : \"Loading...\"}\n      <GlobalStyle />\n    </>\n  );\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    logIn: (user) => dispatch(userActionCreator.logIn(user)),\n    logOut: () => dispatch(userActionCreator.logout()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","C:\\React\\mwflix-upgrade\\src\\component\\Router.js",["117"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Actor from \"../routes/Actor\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Detail from \"../routes/Detail\";\r\nimport Drama from \"../routes/Drama\";\r\nimport Movie from \"../routes/Movie\";\r\nimport MyPage from \"../routes/MyPage\";\r\nimport Navigator from \"./Navigator\";\r\n\r\nconst APPRouter = ({ user }) => {\r\n  return (\r\n    <Router>\r\n      {user ? <Navigator /> : \"\"}\r\n      {user ? (\r\n        <>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Movie />\r\n            </Route>\r\n            <Route path=\"/drama\">\r\n              <Drama />\r\n            </Route>\r\n            <Route path=\"/mypage\">\r\n              <MyPage />\r\n            </Route>\r\n            <Route path=\"/actor/:id\">\r\n              <Actor />\r\n            </Route>\r\n            <Route path=\"/:id\">\r\n              <Detail />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      ) : (\r\n        <Route path=\"/\">\r\n          {\" \"}\r\n          <Auth />\r\n        </Route>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return state.User;\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(APPRouter);\r\n","C:\\React\\mwflix-upgrade\\src\\routes\\Drama.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"C:\\React\\mwflix-upgrade\\src\\routes\\Movie.js",["140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { moviesApi } from \"../api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchPage from \"../component/SearchPage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { myListActionCreator } from \"../store/modules/MyList\";\r\nimport { authService, storeService } from \"../fbase\";\r\nimport { queryAllByAttribute } from \"@testing-library/react\";\r\nimport { errorACtionCreator } from \"../store/modules/Error\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n`;\r\nconst HeaderImage = styled.div`\r\n  position: relative;\r\n  transform: ${(props) => (props.width <= 450 ? \" \" : \"translateY(-13%)\")};\r\n  .Image {\r\n    position: relative;\r\n    height: 0;\r\n    padding-bottom: 56.25%;\r\n    iframe {\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n`;\r\nconst HeaderInfo = styled.div`\r\n  position: absolute;\r\n\r\n  bottom: ${(props) => (props.width > 800 ? \"10%\" : \"0\")};\r\n  left: 50px;\r\n  color: white;\r\n  border: ${(props) => (props.width > 600 ? \"2px solid yellow\" : \"\")};\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  ${(props) => (props.width <= 600 ? \"p{display:none} h1{display:none}\" : \"\")}\r\n  h1 {\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    margin-bottom: 20px;\r\n  }\r\n  p {\r\n    margin-bottom: 20px;\r\n    width: 200px;\r\n  }\r\n  button {\r\n    all: unset;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    background-color: rgba(149, 165, 166, 0.5);\r\n  }\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  div.hoverBox {\r\n    background-color: rgba(20, 20, 20, 1);\r\n    border-radius: 20px;\r\n    width: 100px;\r\n    height: 130px;\r\n    color: white;\r\n    div.videoWrapper {\r\n      position: relative;\r\n      height: 0;\r\n      padding-bottom: 56.25%;\r\n      iframe {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    }\r\n    transform: translate(-25%, -25%);\r\n    @keyframes hoverMove {\r\n      0% {\r\n        transform: scale(1, 1);\r\n      }\r\n      100% {\r\n        transform: scale(3, 2);\r\n      }\r\n    }\r\n\r\n    animation: hoverMove 0.2s linear forwards;\r\n\r\n    h4 {\r\n      padding: 10px;\r\n      color: white;\r\n      font-size: 3px;\r\n      text-align: center;\r\n      margin: 5px 0px;\r\n      // padding: 10px;\r\n    }\r\n    div {\r\n      display: flex;\r\n      justify-content: space-evenly;\r\n      align-items: center;\r\n      button {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 10px;\r\n        height: 10px;\r\n        border: none;\r\n        outline: none;\r\n        color: white;\r\n        background-color: rgba(64, 115, 158, 1);\r\n        border-radius: 5px;\r\n        &:active {\r\n          transform: scale(0.98, 0.98);\r\n        }\r\n      }\r\n      a {\r\n        font-size: 10px;\r\n        border: 1px solid rgba(64, 115, 158, 1);\r\n        padding: 3px;\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n        &:active {\r\n          transform: scale(0.99, 0.99);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst SectionWrapper = styled.section`\r\n  position: relative;\r\n\r\n  margin-bottom: 50px;\r\n  padding: 10px;\r\n  h1 {\r\n    color: white;\r\n    font-size: 25px;\r\n    margin-bottom: 20px;\r\n  }\r\n  &:hover {\r\n    div#left,\r\n    div#right {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\nconst MoviesWrapper = styled.div`\r\n  margin: 0 auto;\r\n  display: flex;\r\n  width: 99vw;\r\n\r\n  overflow: auto;\r\n  // overflow-y: hidden;\r\n  scroll-behavior: smooth;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  img {\r\n    width: 100px;\r\n    height: 130px;\r\n  }\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  position: absolute;\r\n  &#left,\r\n  &#right {\r\n    top: 35px;\r\n    height: 150px;\r\n    width: 30px;\r\n    z-index: 10;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(15, 15, 15, 0.7);\r\n    color: white;\r\n    opacity: 0;\r\n  }\r\n  &#right {\r\n    right: 0;\r\n  }\r\n`;\r\nconst MovieWrapper = styled.div`\r\n  position: relative;\r\n  margin-right: 25px;\r\n`;\r\n\r\nconst SLink = styled(Link)``;\r\n\r\nconst Movie = ({ MyList, listPush, bunchPush, uid, errorText }) => {\r\n  const [data, setData] = useState({}); // popular, nowPlaying upComing  -> data.results에 존재\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [testTimer, setTimer] = useState(null);\r\n\r\n  const findData = async () => {\r\n    let testArray = [];\r\n    const test = await storeService\r\n      .collection(`mwFlix-${uid}`)\r\n      .get(queryAllByAttribute);\r\n\r\n    test.forEach((item) =>\r\n      testArray.push({\r\n        id: parseInt(item.data().id),\r\n        content: item.data().type,\r\n      })\r\n    );\r\n\r\n    bunchPush(testArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!MyList.length) findData(); // 처음 로그인하고  화면들어올때만  셋팅을 해준다.\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => setWidth(window.innerWidth));\r\n\r\n    return () =>\r\n      window.removeEventListener(\"resize\", () => setWidth(window.innerWidth));\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    const {\r\n      data: { results: popular },\r\n    } = await moviesApi.popular();\r\n\r\n    const {\r\n      data: { results: nowPlaying },\r\n    } = await moviesApi.nowPlaying();\r\n\r\n    const {\r\n      data: { results: upComing },\r\n    } = await moviesApi.upComing();\r\n\r\n    const Random = Math.floor(Math.random() * (nowPlaying.length - 1)) + 1;\r\n    const latestVideo = (\r\n      await moviesApi.videos(parseInt(nowPlaying[Random].id))\r\n    ).data.results;\r\n    const latest = nowPlaying[Random];\r\n\r\n    setData({ popular, nowPlaying, upComing, latest, latestVideo });\r\n  }, []);\r\n\r\n  // +버튼을 누르면  내 목록에 추가한다. // 단 내목록에 추가할때  id만 추가하고  내 목록페이지에 갔을때  api로 찾아준다.\r\n  const handleShareBtn = async (e) => {\r\n    const {\r\n      currentTarget: {\r\n        parentNode: {\r\n          parentNode: { id },\r\n        },\r\n      },\r\n    } = e;\r\n\r\n    // 이미 저장되있는지 판별해야 한다.\r\n    let save = 1;\r\n    const test = await storeService\r\n      .collection(`mwFlix-${uid}`)\r\n      .get(queryAllByAttribute);\r\n\r\n    test.forEach((item) =>\r\n      parseInt(item.data().id) === parseInt(id) ? (save = 0) : (save = 1)\r\n    ); // 아이다가 같으면 save해주지 않는다.\r\n    if (save) {\r\n      const data = { id: parseInt(id), creator: uid, type: \"movie\" };\r\n      await storeService.collection(`mwFlix-${uid}`).add(data);\r\n      listPush(parseInt(id), \"movie\");\r\n    } else {\r\n      errorText(\"이미 저장되어있는 영화입니다.\");\r\n    }\r\n  };\r\n\r\n  // 포스터 위에 마우스를 올렸을때  영상이 재생되게 하는 함수 필요(영상데이터를 가져와야 한다.)\r\n  const hoverVideo = (dataArray, videoId, name) => {\r\n    const hoverBox = document.querySelector(\".hoverBox\");\r\n    let videoWrapper;\r\n    let title;\r\n    if (hoverBox) {\r\n      if (dataArray.length !== 0) {\r\n        videoWrapper = document.createElement(\"div\");\r\n        videoWrapper.className = \"videoWrapper\";\r\n        const video = document.createElement(\"iframe\");\r\n        video.src = `https://www.youtube.com/embed/${dataArray[0].key}?ps=blogger&showinfo=0&cc_load_policy=0&iv_load_policy=3&vq=hd720&rel=0&fs=0&control=0&autoplay=1&mute=1&amp;loop=1;playlist=${dataArray[0].key}`;\r\n        video.frameborder = \"0\";\r\n        video.width = \"100%\";\r\n        video.height = \"100%\";\r\n        video.allow =\r\n          \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\";\r\n\r\n        videoWrapper.appendChild(video);\r\n        title = document.createElement(\"h4\");\r\n\r\n        title.innerText =\r\n          name.length < 20 ? name : name.substring(0, 20) + \"...\";\r\n      } else {\r\n        // 비디오가 없을 경우  이미지 넣어주기\r\n        videoWrapper = document.createElement(\"img\");\r\n        videoWrapper.className = \"videoWrapper\";\r\n\r\n        videoWrapper.src =\r\n          \"https://usecloud.s3-ap-northeast-1.amazonaws.com/%EC%96%B4%EB%AA%BD%EC%96%B4%EC%8A%A4.PNG\";\r\n      }\r\n      // 제목이랑  상세정보 보기 버튼이 필요하다.\r\n\r\n      const btnWrapper = document.createElement(\"div\");\r\n\r\n      const shareBtn = document.createElement(\"button\");\r\n      shareBtn.innerText = \"+\";\r\n      shareBtn.addEventListener(\"click\", handleShareBtn);\r\n      const link = document.createElement(\"a\");\r\n      link.href = `/#/${videoId}/movie`;\r\n      link.innerText = \"상세정보\";\r\n      btnWrapper.appendChild(shareBtn);\r\n      btnWrapper.appendChild(link);\r\n      hoverBox.appendChild(videoWrapper);\r\n      if (title) hoverBox.appendChild(title);\r\n      hoverBox.appendChild(btnWrapper);\r\n    }\r\n    //<iframe width=\"246\" height=\"200\" src=\"https://www.youtube.com/embed/F40YOxvwTjg\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n  };\r\n\r\n  const createBox = async (where, id) => {\r\n    const containerBox = document.querySelector(\".content\");\r\n\r\n    if (containerBox) {\r\n      if (document.querySelector(\".hoverBox\"))\r\n        containerBox.removeChild(document.querySelector(\".hoverBox\"));\r\n\r\n      const {\r\n        data: {\r\n          videos: { results: videos },\r\n          id: videoId,\r\n          original_title: name,\r\n        },\r\n      } = await moviesApi.detail(parseInt(id));\r\n\r\n      console.log(videos, videoId, name);\r\n      const hoverBox = document.createElement(\"div\");\r\n      hoverBox.className = \"hoverBox\";\r\n      hoverBox.id = id;\r\n      hoverBox.style.position = \"absolute\";\r\n      hoverBox.style.top = String(where.y + window.scrollY) + \"px\";\r\n      hoverBox.style.left = String(where.x) + \"px\";\r\n\r\n      hoverBox.addEventListener(\"mouseleave\", setOriginal);\r\n      containerBox.appendChild(hoverBox);\r\n      hoverVideo(videos, videoId, name);\r\n    }\r\n  };\r\n\r\n  const bringVideo = async (e) => {\r\n    const {\r\n      currentTarget: { id },\r\n    } = e;\r\n    const {\r\n      currentTarget: {\r\n        firstChild: { lastChild },\r\n      },\r\n    } = e;\r\n\r\n    const where = e.currentTarget.getBoundingClientRect();\r\n\r\n    //timerSetting = setTimeout(() => createBox(where), 1200); // 2초전에 마우스가 나가면 clearTimeout을 해줘야 한다.\r\n    setTimer(setTimeout(() => createBox(where, id), 1200)); // 2초전에 마우스가 나가면 clearTimeout을 해줘야 한다.\r\n\r\n    // 비디오를 찾아서 화면에 넣어주어야 한다.\r\n  };\r\n\r\n  // 확대된 포스터 위에서 마우스가 벗어났을 때  원래대로 되돌린다.\r\n\r\n  const setOriginal = () => {\r\n    //timer = 0;\r\n    setTimer(null);\r\n    const containerBox = document.querySelector(\".content\");\r\n    const hoverBox = document.querySelectorAll(\".hoverBox\");\r\n\r\n    if (hoverBox) hoverBox.forEach((item) => containerBox.removeChild(item));\r\n  };\r\n\r\n  const setClearTime = () => {\r\n    if (testTimer !== null) {\r\n      //clearTimeout(timerSetting);\r\n      clearTimeout(testTimer);\r\n    }\r\n  };\r\n\r\n  // 포스터 슬라이더 기능 구현\r\n  const handleSlider = (e) => {\r\n    const {\r\n      currentTarget: { id, previousSibling },\r\n    } = e;\r\n\r\n    let contentWidth =\r\n      e.id === \"left\"\r\n        ? Math.ceil(previousSibling.offsetWidth) + 25 + 8\r\n        : Math.ceil(previousSibling.previousSibling.offsetWidth) + 25 + 8;\r\n\r\n    if (id === \"left\") {\r\n      //scrollWidth // scrollLeft // clientWidth\r\n      if (previousSibling.scrollLeft !== 0) {\r\n        //scrollSpeeder(\"left\", previousSibling);\r\n        previousSibling.scrollLeft =\r\n          Math.ceil(previousSibling.scrollLeft) - contentWidth;\r\n        if (previousSibling.scrollLeft - contentWidth <= 0) {\r\n          setTimeout(() => {\r\n            previousSibling.style.scrollBehavior = \"auto\";\r\n            previousSibling.scrollLeft = contentWidth * 2;\r\n            previousSibling.style.scrollBehavior = \"smooth\";\r\n          }, 500);\r\n        }\r\n      }\r\n    } else {\r\n      const { previousSibling: rightSibling } = previousSibling;\r\n      if (\r\n        Math.ceil(rightSibling.scrollLeft + rightSibling.offsetWidth) <\r\n        rightSibling.scrollWidth\r\n      ) {\r\n        // 2500\r\n        rightSibling.scrollLeft =\r\n          Math.ceil(rightSibling.scrollLeft) + contentWidth;\r\n        if (\r\n          rightSibling.scrollLeft >\r\n          rightSibling.scrollWidth - rightSibling.scrollLeft\r\n        ) {\r\n          setTimeout(() => {\r\n            rightSibling.style.scrollBehavior = \"auto\";\r\n            rightSibling.scrollLeft = contentWidth;\r\n            rightSibling.style.scrollBehavior = \"smooth\";\r\n          }, 500);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return Object.keys(data).length !== 0 ? (\r\n    <Container>\r\n      <HeaderImage width={width}>\r\n        {data[\"latestVideo\"]?.length !== 0 ? (\r\n          <div className=\"Image\">\r\n            <iframe\r\n              src={`https://www.youtube.com/embed/${data[\"latestVideo\"][0].key}?vq=hd720&autoplay=1&mute=1&amp;loop=1;playlist=${data[\"latestVideo\"][0].key}`}\r\n              frameborder=\"0\"\r\n              allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n              allowFullscreen\r\n            ></iframe>\r\n          </div>\r\n        ) : (\r\n          <img\r\n            src={\r\n              data[\"latest\"].poster_path\r\n                ? `https://image.tmdb.org/t/p/w300${data[\"latest\"].poster_path}`\r\n                : \"https://usecloud.s3-ap-northeast-1.amazonaws.com/kakaoMapIcon/movie.jpg\"\r\n            }\r\n          ></img>\r\n        )}\r\n        <HeaderInfo width={width}>\r\n          <h1>{data[\"latest\"].original_title}</h1>\r\n          <p>\r\n            {data[\"latest\"].overview.length < 110\r\n              ? data[\"latest\"].overview\r\n              : data[\"latest\"].overview.substring(0, 110) + \"...\"}\r\n          </p>\r\n          <SLink to={`/${data[\"latest\"].id}/movie`}>\r\n            <button>상세정보</button>\r\n          </SLink>\r\n        </HeaderInfo>\r\n      </HeaderImage>\r\n\r\n      <ContentWrapper className=\"content\">\r\n        <SectionWrapper>\r\n          <h1>Popular Movie</h1>\r\n          <MoviesWrapper>\r\n            {data !== {}\r\n              ? data[\"popular\"].map((item, index) =>\r\n                  index > 9 ? (\r\n                    <MovieWrapper\r\n                      id={item.id}\r\n                      onMouseEnter={bringVideo}\r\n                      onMouseLeave={setClearTime}\r\n                    >\r\n                      <SLink to={`/${item.id}/movie`}>\r\n                        <img\r\n                          src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\r\n                        />\r\n                      </SLink>\r\n                    </MovieWrapper>\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                )\r\n              : \"\"}\r\n            {data !== {}\r\n              ? data[\"popular\"].map((item) => (\r\n                  <MovieWrapper\r\n                    id={item.id}\r\n                    onMouseEnter={bringVideo}\r\n                    onMouseLeave={setClearTime}\r\n                  >\r\n                    <SLink to={`/${item.id}/movie`}>\r\n                      <img\r\n                        src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\r\n                      />\r\n                    </SLink>\r\n                  </MovieWrapper>\r\n                ))\r\n              : \"\"}\r\n            {data !== {}\r\n              ? data[\"popular\"].map((item, index) =>\r\n                  index < 10 ? (\r\n                    <MovieWrapper\r\n                      id={item.id}\r\n                      onMouseEnter={bringVideo}\r\n                      onMouseLeave={setClearTime}\r\n                    >\r\n                      <SLink to={`/${item.id}/movie`}>\r\n                        <img\r\n                          src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\r\n                        />\r\n                      </SLink>\r\n                    </MovieWrapper>\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                )\r\n              : \"\"}\r\n          </MoviesWrapper>\r\n          <IconWrapper id=\"left\" onClick={handleSlider}>\r\n            <FontAwesomeIcon icon={faChevronLeft}></FontAwesomeIcon>\r\n          </IconWrapper>\r\n          <IconWrapper id=\"right\" onClick={handleSlider}>\r\n            <FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon>\r\n          </IconWrapper>\r\n        </SectionWrapper>\r\n        <SectionWrapper>\r\n          <h1>Now Playing</h1>\r\n          <MoviesWrapper>\r\n            {data !== {}\r\n              ? data[\"nowPlaying\"].map((item, index) =>\r\n                  index > 9 ? (\r\n                    <MovieWrapper\r\n                      id={item.id}\r\n                      onMouseEnter={bringVideo}\r\n                      onMouseLeave={setClearTime}\r\n                    >\r\n                      <SLink to={`/${item.id}/movie`}>\r\n                        <img\r\n                          src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\r\n                        />\r\n                      </SLink>\r\n                    </MovieWrapper>\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                )\r\n              : \"\"}\r\n            {data !== {}\r\n              ? data[\"nowPlaying\"].map((item) => (\r\n                  <MovieWrapper\r\n                    id={item.id}\r\n                    onMouseEnter={bringVideo}\r\n                    onMouseLeave={setClearTime}\r\n                  >\r\n                    <SLink to={`/${item.id}/movie`}>\r\n                      <img\r\n                        src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\r\n                      />\r\n                    </SLink>\r\n                  </MovieWrapper>\r\n                ))\r\n              : \"\"}\r\n            {data !== {}\r\n              ? data[\"nowPlaying\"].map((item, index) =>\r\n                  index < 10 ? (\r\n                    <MovieWrapper\r\n                      id={item.id}\r\n                      onMouseEnter={bringVideo}\r\n                      onMouseLeave={setClearTime}\r\n                    >\r\n                      <SLink to={`/${item.id}/movie`}>\r\n                        <img\r\n                          src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\r\n                        />\r\n                      </SLink>\r\n                    </MovieWrapper>\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                )\r\n              : \"\"}\r\n          </MoviesWrapper>\r\n          <IconWrapper id=\"left\" onClick={handleSlider}>\r\n            <FontAwesomeIcon icon={faChevronLeft}></FontAwesomeIcon>\r\n          </IconWrapper>\r\n          <IconWrapper id=\"right\" onClick={handleSlider}>\r\n            <FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon>\r\n          </IconWrapper>\r\n        </SectionWrapper>\r\n        <SectionWrapper>\r\n          <h1>UpComing</h1>\r\n          <MoviesWrapper>\r\n            {data !== {}\r\n              ? data[\"upComing\"].map((item, index) =>\r\n                  index > 9 ? (\r\n                    <MovieWrapper\r\n                      id={item.id}\r\n                      onMouseEnter={bringVideo}\r\n                      onMouseLeave={setClearTime}\r\n                    >\r\n                      <SLink to={`/${item.id}/movie`}>\r\n                        <img\r\n                          src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\r\n                        />\r\n                      </SLink>\r\n                    </MovieWrapper>\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                )\r\n              : \"\"}\r\n            {data !== {}\r\n              ? data[\"upComing\"].map((item) => (\r\n                  <MovieWrapper\r\n                    id={item.id}\r\n                    onMouseEnter={bringVideo}\r\n                    onMouseLeave={setClearTime}\r\n                  >\r\n                    <SLink to={`/${item.id}/movie`}>\r\n                      <img\r\n                        src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\r\n                      />\r\n                    </SLink>\r\n                  </MovieWrapper>\r\n                ))\r\n              : \"\"}\r\n            {data !== {}\r\n              ? data[\"upComing\"].map((item, index) =>\r\n                  index < 10 ? (\r\n                    <MovieWrapper\r\n                      id={item.id}\r\n                      onMouseEnter={bringVideo}\r\n                      onMouseLeave={setOriginal}\r\n                    >\r\n                      <SLink to={`/${item.id}/movie`}>\r\n                        <img\r\n                          src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\r\n                        />\r\n                      </SLink>\r\n                    </MovieWrapper>\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                )\r\n              : \"\"}\r\n          </MoviesWrapper>\r\n          <IconWrapper id=\"left\" onClick={handleSlider}>\r\n            <FontAwesomeIcon icon={faChevronLeft}></FontAwesomeIcon>\r\n          </IconWrapper>\r\n          <IconWrapper id=\"right\" onClick={handleSlider}>\r\n            <FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon>\r\n          </IconWrapper>\r\n        </SectionWrapper>\r\n      </ContentWrapper>\r\n      <SearchPage></SearchPage>\r\n    </Container>\r\n  ) : (\r\n    \"Loading..\"\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { MyList: state.MyList, uid: state.User.user.uid };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    listPush: (id, content) =>\r\n      dispatch(myListActionCreator.dataPush(id, content)),\r\n    bunchPush: (data) => dispatch(myListActionCreator.dataBunchPush(data)),\r\n    errorText: (text) => dispatch(errorACtionCreator.error(text)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);\r\n","C:\\React\\mwflix-upgrade\\src\\component\\GlobalStyle.js",[],"C:\\React\\mwflix-upgrade\\src\\component\\Navigator.js",["157"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport SearchForm from \"./SearchForm\";\r\n\r\nconst Ul = styled.ul`\r\n  background-color: ${(props) =>\r\n    props.scroll !== 0 ? \"rgba(20, 20, 20, 0.9)\" : \"\"};\r\n  background: ${(props) =>\r\n    props.scroll === 0 ? \"linear-gradient(black,rgba(0,0,0,0))\" : \"\"};\r\n  color: white;\r\n  width: 100%;\r\n  height: 60px;\r\n  //display: ${(props) => (props.width >= 960 ? \"flex\" : \"block\")};\r\n  display: grid;\r\n  grid-template-columns: repeat(4, minmax(70px, 1fr));\r\n\r\n  justify-items: center;\r\n  align-items: center;\r\n  font-size: ${(props) => (props.width > 450 ? \"20px\" : \"15px\")};\r\n  z-index: 10;\r\n  position: fixed;\r\n  top: 0;\r\n`;\r\nconst SLink = styled(Link)`\r\n  padding-bottom: 20px;\r\n  border-bottom: ${(props) => (props.isroute ? \"5px solid red\" : \"\")};\r\n`;\r\n\r\nconst Navigator = ({ location }) => {\r\n  const route = location.pathname;\r\n  const [scroll, setScroll] = useState(window.scrollY);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => setScroll(window.scrollY));\r\n    window.addEventListener(\"resize\", () => setWidth(window.innerWidth));\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", () => setScroll(window.scrollY));\r\n      window.removeEventListener(\"resize\", () => setWidth(window.innerWidth));\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Ul scroll={scroll} width={width}>\r\n      <SLink to=\"/\" isroute={route === \"/\" ? 1 : 0}>\r\n        Movie\r\n      </SLink>\r\n      <SLink to=\"/drama\" isroute={route === \"/drama\" ? 1 : 0}>\r\n        Drama\r\n      </SLink>\r\n      <SLink to=\"/mypage\" isroute={route === \"/mypage\" ? 1 : 0}>\r\n        MyPage\r\n      </SLink>\r\n      <SearchForm width={width}></SearchForm>\r\n    </Ul>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navigator);\r\n","C:\\React\\mwflix-upgrade\\src\\routes\\MyPage.js",["158","159","160","161","162","163","164"],"C:\\React\\mwflix-upgrade\\src\\routes\\Auth.js",["165","166","167","168"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { authService } from \"../fbase\";\r\nimport { connect } from \"react-redux\";\r\nimport { userActionCreator } from \"../store/modules/User\";\r\nimport { errorACtionCreator } from \"../store/modules/Error\";\r\nimport SocialLogin from \"../component/SocialLogin\";\r\nimport ErrorMessage from \"../component/ErrorMessage\";\r\nimport { myListActionCreator } from \"../store/modules/MyList\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Form = styled.form``;\r\n\r\nconst Auth = ({ errorMessage, successMessage }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [create, setCreate] = useState(false);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let user;\r\n    try {\r\n      if (!create) {\r\n        // 로그인 처리해줘야 한다.\r\n        user = await authService.signInWithEmailAndPassword(email, password);\r\n      } else if (create) {\r\n        // 만들어주는 처리 해줘야 한다.\r\n        user = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      }\r\n      successMessage();\r\n\r\n      // state update가 필요하다.\r\n    } catch (error) {\r\n      errorMessage(error.message);\r\n    }\r\n\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    if (e.target.name === \"email\") {\r\n      setEmail(e.target.value);\r\n    } else {\r\n      setPassword(e.target.value);\r\n    }\r\n  };\r\n\r\n  const toggleBtn = (e) => {\r\n    e.preventDefault();\r\n    setCreate((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value={!create ? \"Log In\" : \"Create\"} />\r\n        <button onClick={toggleBtn}>{!create ? \"Create\" : \"Sign In\"}</button>\r\n      </Form>\r\n      <ErrorMessage></ErrorMessage>\r\n      <SocialLogin></SocialLogin>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    errorMessage: (text) => dispatch(errorACtionCreator.error(text)),\r\n    successMessage: () => dispatch(errorACtionCreator.success()),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Auth);\r\n","C:\\React\\mwflix-upgrade\\src\\store\\index.js",[],"C:\\React\\mwflix-upgrade\\src\\store\\configure.js",[],"C:\\React\\mwflix-upgrade\\src\\store\\modules\\index.js",[],"C:\\React\\mwflix-upgrade\\src\\store\\modules\\User.js",["169"],"const LOGIN = \"LOGIN\";\r\nconst LOGOUT = \"LOGOUT\";\r\n\r\nexport const userActionCreator = {\r\n  logIn: (user) => {\r\n    return { type: LOGIN, user: user };\r\n  },\r\n  logout: () => {\r\n    return { type: LOGOUT };\r\n  },\r\n};\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return { user: action.user };\r\n    case \"LOGOUT\":\r\n      return { user: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\React\\mwflix-upgrade\\src\\store\\modules\\Error.js",["170"],"const SUCCESS = \"SUCCESS\";\r\nconst ERROR = \"ERROR\";\r\n\r\nexport const errorACtionCreator = {\r\n  success: () => ({ type: SUCCESS }),\r\n  error: (error) => ({ type: ERROR, text: error }),\r\n};\r\n\r\nexport default (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case SUCCESS:\r\n      return { text: \"\" };\r\n    case ERROR:\r\n      return { text: action.text };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\React\\mwflix-upgrade\\src\\fbase.js",[],"C:\\React\\mwflix-upgrade\\src\\component\\SocialLogin.js",["171"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { authService, firebaseInit } from \"../fbase\";\r\nimport { connect } from \"react-redux\";\r\nimport { userActionCreator } from \"../store/modules/User\";\r\nimport { errorACtionCreator } from \"../store/modules/Error\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst SocialLogin = ({ logIn, errorMessage }) => {\r\n  const onClick = async (e) => {\r\n    let provider;\r\n    let user;\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    try {\r\n      if (name === \"google\") {\r\n        provider = new firebaseInit.auth.GoogleAuthProvider();\r\n        user = await authService.signInWithPopup(provider);\r\n      } else if (name === \"guest\") {\r\n        user = await authService.signInAnonymously();\r\n      }\r\n      logIn(user);\r\n    } catch (error) {\r\n      errorMessage(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <button name=\"google\" onClick={onClick}>\r\n        Google Login\r\n      </button>\r\n      <button name=\"kakao\" onClick={onClick}>\r\n        kakao Login\r\n      </button>\r\n      <button name=\"guest\" onClick={onClick}>\r\n        Guest\r\n      </button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    logIn: (user) => dispatch(userActionCreator.logIn(user)),\r\n    errorMessage: (text) => dispatch(errorACtionCreator.error(text)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SocialLogin);\r\n","C:\\React\\mwflix-upgrade\\src\\component\\ErrorMessage.js",["172"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst ErrorMessage = ({ errorText }) => {\r\n  return (\r\n    <Container>\r\n      <span>{errorText}</span>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { errorText: state.Error.text };\r\n};\r\nexport default connect(mapStateToProps, null)(ErrorMessage);\r\n","C:\\React\\mwflix-upgrade\\src\\api.js",[],"C:\\React\\mwflix-upgrade\\src\\routes\\Detail.js",["173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"C:\\React\\mwflix-upgrade\\src\\component\\SearchForm.js",["188","189","190"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { searchActionCreator } from \"../store/modules/Search\";\r\n\r\nconst Container = styled.form`\r\n  //position: absolute;\r\n  //right: 5px;\r\n  //top: 10px;\r\n\r\n  width: ${(props) => (props.width < 450 ? \"80px\" : \"\")};\r\n  input {\r\n    outline: none;\r\n    border: none;\r\n    padding: 5px;\r\n    width: inherit;\r\n    background-color: #2c3e50;\r\n    color: white;\r\n    &::placeholder {\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SearchForm = ({ search, doSearch, notSearch, width }) => {\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    // 검색 기능\r\n\r\n    //검색후 기능  search state는 \"\"로 셋팅해준다.\r\n    // notSearch();\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const text = e.target.value;\r\n    // 변한 직전에  검색을 해주어야 한다.\r\n    doSearch(text);\r\n  };\r\n\r\n  return (\r\n    <Container onSubmit={onSubmit} width={width}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        value={search.text}\r\n        onChange={onChange}\r\n        width={width}\r\n        className=\"searchInput\"\r\n      ></input>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { search: state.Search };\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    doSearch: (text) => dispatch(searchActionCreator.search(text)),\r\n    notSearch: () => dispatch(searchActionCreator.noSearch()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);\r\n","C:\\React\\mwflix-upgrade\\src\\store\\modules\\Search.js",["191"],"const SEARCH = \"SEARCH\";\r\nconst NOSEARCH = \"NOSEARCH\";\r\n\r\nexport const searchActionCreator = {\r\n  search: (text) => ({ type: SEARCH, text }),\r\n  noSearch: () => ({ type: NOSEARCH, text: \"\" }),\r\n};\r\n\r\nexport default (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case SEARCH:\r\n      return action.text;\r\n    case NOSEARCH:\r\n      return action.text;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\React\\mwflix-upgrade\\src\\component\\SearchPage.js",["192","193","194","195"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { dramaApi, moviesApi } from \"../api\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { searchActionCreator } from \"../store/modules/Search\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  height: 90vh;\r\n  width: 90vw;\r\n  background-color: rgba(149, 175, 192, 1);\r\n  border-radius: 20px;\r\n  padding: 20px;\r\n  z-index: 100;\r\n  position: absolute;\r\n  top: ${(props) => `${props.scroll + 40}px`};\r\n  display: grid;\r\n  grid-template-rows: repeat(2, 1fr);\r\n  grid-template-columns: 90vw;\r\n  justify-items: center;\r\n  justify-content: center;\r\n  @keyframes SearchMove {\r\n    0% {\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  animation: SearchMove 0.3s linear forwards;\r\n`;\r\nconst MovieSearchWrapper = styled.section`\r\n  text-align: center;\r\n  width: 80%;\r\n\r\n  h1 {\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    margin-bottom: 20px;\r\n  }\r\n  margin-bottom: 50px;\r\n`;\r\nconst DramaSearchWrapper = styled.section`\r\n  width: 80%;\r\n  text-align: center;\r\n  align-self: start;\r\n\r\n  h1 {\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    margin-bottom: 20px;\r\n    margin-top: 5px;\r\n  }\r\n  margin-bottom: 50px;\r\n`;\r\nconst PosterWrapper = styled.ul`\r\n  display: flex;\r\n  width: 100%;\r\n  overflow: auto;\r\n  scroll-behavior: smooth;\r\n  margin-bottom: 0px;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Poster = styled.li`\r\n  margin-right: 25px;\r\n  span {\r\n    font-size: 10px;\r\n    font-weight: 600;\r\n  }\r\n  img {\r\n    width: 90px;\r\n    height: 100px;\r\n    object-fit: contain;\r\n  }\r\n`;\r\nconst IconWrapper = styled.div`\r\n  #left {\r\n    margin-right: 10px;\r\n  }\r\n  #left,\r\n  #right {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst CloseWrapper = styled.div`\r\n  position: absolute;\r\n  font-size: 30px;\r\n  top: 10px;\r\n  right: 30px;\r\n  &:active {\r\n    transform: scale(0.95, 0.95);\r\n  }\r\n`;\r\n\r\nconst SearchPage = ({ search, noSearch }) => {\r\n  const [tv, setDrama] = useState([]);\r\n  const [mov, setMovie] = useState([]);\r\n  const [scroll, setScroll] = useState(parseInt(window.scrollY));\r\n\r\n  const movieSearchScroll = (e) => {\r\n    const {\r\n      currentTarget: { id },\r\n    } = e;\r\n    const sliderBox = document.querySelector(\".movieContainer\");\r\n\r\n    if (id === \"left\") {\r\n      sliderBox.scrollLeft = sliderBox.scrollLeft\r\n        ? sliderBox.scrollLeft - sliderBox.clientWidth\r\n        : 0;\r\n    } else {\r\n      sliderBox.scrollLeft =\r\n        sliderBox.scrollLeft + sliderBox.clientWidth >= sliderBox.scrollWidth\r\n          ? sliderBox.scrollLeft\r\n          : sliderBox.scrollLeft + sliderBox.clientWidth;\r\n    }\r\n  };\r\n\r\n  const dramaSearchScroll = (e) => {\r\n    const {\r\n      currentTarget: { id },\r\n    } = e;\r\n    const sliderBox = document.querySelector(\".tvContainer\");\r\n\r\n    if (id === \"left\") {\r\n      sliderBox.scrollLeft = sliderBox.scrollLeft\r\n        ? sliderBox.scrollLeft - sliderBox.clientWidth\r\n        : 0;\r\n    } else {\r\n      sliderBox.scrollLeft =\r\n        sliderBox.scrollLeft + sliderBox.clientWidth >= sliderBox.scrollWidth\r\n          ? sliderBox.scrollLeft\r\n          : sliderBox.scrollLeft + sliderBox.clientWidth;\r\n    }\r\n  };\r\n\r\n  const closeBtnClick = (e) => {\r\n    //검색창 검색어를 클린해준다.\r\n    noSearch();\r\n    const searchInput = document.querySelector(\".searchInput\");\r\n    searchInput.value = \"\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () =>\r\n      setScroll(parseInt(window.scrollY))\r\n    );\r\n    return () =>\r\n      window.removeEventListener(\"scroll\", () =>\r\n        setScroll(parseInt(window.scrollY))\r\n      );\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    const {\r\n      data: { results: searchDrama },\r\n    } = await dramaApi.search(search);\r\n    const {\r\n      data: { results: searchMovie },\r\n    } = await moviesApi.search(search);\r\n    console.log(searchDrama);\r\n    console.log(searchMovie);\r\n    setDrama(searchDrama);\r\n    setMovie(searchMovie);\r\n  }, [search]);\r\n\r\n  return search !== \"\" ? (\r\n    <Container scroll={scroll}>\r\n      <MovieSearchWrapper>\r\n        <h1>Movie</h1>\r\n        <PosterWrapper className=\"movieContainer\">\r\n          {mov && mov.length !== 0\r\n            ? mov.map((item) => (\r\n                <Link\r\n                  to={`/${item.id}/movie`}\r\n                  onClick={() => setTimeout(() => window.location.reload(), 50)}\r\n                >\r\n                  <Poster>\r\n                    <img\r\n                      src={\r\n                        item.poster_path\r\n                          ? `https://image.tmdb.org/t/p/w300${item.poster_path}`\r\n                          : \"https://usecloud.s3-ap-northeast-1.amazonaws.com/kakaoMapIcon/movie.jpg\"\r\n                      }\r\n                    />\r\n                    <span>{item.original_title}</span>\r\n                  </Poster>\r\n                </Link>\r\n              ))\r\n            : \"\"}\r\n        </PosterWrapper>\r\n        <IconWrapper>\r\n          <FontAwesomeIcon\r\n            icon={faChevronLeft}\r\n            id=\"left\"\r\n            onClick={movieSearchScroll}\r\n          ></FontAwesomeIcon>\r\n          <FontAwesomeIcon\r\n            icon={faChevronRight}\r\n            id=\"right\"\r\n            onClick={movieSearchScroll}\r\n          ></FontAwesomeIcon>\r\n        </IconWrapper>\r\n      </MovieSearchWrapper>\r\n\r\n      <DramaSearchWrapper>\r\n        <IconWrapper>\r\n          <FontAwesomeIcon\r\n            icon={faChevronLeft}\r\n            id=\"left\"\r\n            onClick={dramaSearchScroll}\r\n          ></FontAwesomeIcon>\r\n          <FontAwesomeIcon\r\n            icon={faChevronRight}\r\n            id=\"right\"\r\n            onClick={dramaSearchScroll}\r\n          ></FontAwesomeIcon>\r\n        </IconWrapper>\r\n        <h1>Drama</h1>\r\n        <PosterWrapper className=\"tvContainer\">\r\n          {tv && tv.length !== 0\r\n            ? tv.map((item) => (\r\n                <Link\r\n                  to={`/${item.id}/tv`}\r\n                  onClick={() => setTimeout(() => window.location.reload(), 50)}\r\n                >\r\n                  <Poster>\r\n                    <img\r\n                      src={\r\n                        item.poster_path\r\n                          ? `https://image.tmdb.org/t/p/w300${item.poster_path}`\r\n                          : \"https://usecloud.s3-ap-northeast-1.amazonaws.com/kakaoMapIcon/movie.jpg\"\r\n                      }\r\n                    />\r\n                    <span>{item.name}</span>\r\n                  </Poster>\r\n                </Link>\r\n              ))\r\n            : \"\"}\r\n        </PosterWrapper>\r\n      </DramaSearchWrapper>\r\n      <CloseWrapper>\r\n        <FontAwesomeIcon\r\n          icon={faTimes}\r\n          onClick={closeBtnClick}\r\n        ></FontAwesomeIcon>\r\n      </CloseWrapper>\r\n    </Container>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { search: state.Search };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return { noSearch: () => dispatch(searchActionCreator.noSearch()) };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\r\n","C:\\React\\mwflix-upgrade\\src\\routes\\Actor.js",["196","197","198","199"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { actorApi } from \"../api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchPage from \"../component/SearchPage\";\r\n\r\nconst Container = styled.div`\r\n  /* margin-top: 60px; */\r\n  height: 100%;\r\n  background-color: #353b48;\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\nconst Profile = styled.div`\r\n  display: ${(props) => (props.size > 600 ? \"flex\" : \"block\")};\r\n  padding: 0 10px;\r\n  padding-top: 30px;\r\n  img {\r\n    max-width: 300px;\r\n    max-height: 500px;\r\n    object-fit: cover;\r\n    box-shadow: 10px 10px 10px black;\r\n  }\r\n  .actorInfo {\r\n    margin-left: 10px;\r\n    height: 90vh;\r\n    color: white;\r\n    width: 100%;\r\n    padding: 20px;\r\n    display: grid;\r\n    grid-template-rows: 1fr 1fr 1fr 5fr;\r\n    span,\r\n    h1 {\r\n      font-size: 20px;\r\n      font-weight: 600;\r\n      margin-right: 20px;\r\n      color: #e84118;\r\n    }\r\n    h1 {\r\n      margin-bottom: 20px;\r\n    }\r\n    img {\r\n      max-width: 100px;\r\n      max-height: 130px;\r\n      object-fit: contain;\r\n      margin-right: 50px;\r\n      &:hover {\r\n        transform: translateY(-10%);\r\n      }\r\n      transition: transform 0.5s linear;\r\n    }\r\n  }\r\n`;\r\nconst Actor = () => {\r\n  const [data, setData] = useState(null);\r\n  const [size, setSize] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => setSize(window.innerWidth));\r\n    return () =>\r\n      window.removeEventListener(\"resize\", () => setSize(window.innerWidth));\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    const id = window.location.href.split(\"actor/\")[1];\r\n    const actor = await actorApi(id);\r\n    setData(actor.data);\r\n  }, []);\r\n  console.log(data);\r\n  return data ? (\r\n    <>\r\n      <Container>\r\n        <Profile size={size}>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w300/${data.person.profile_path}`}\r\n          />\r\n          <div className=\"actorInfo\">\r\n            <section>\r\n              <span>Name:</span> {data.person.name}\r\n            </section>\r\n            <section>\r\n              <span>Job:</span>\r\n              {data.job}\r\n            </section>\r\n            <section>\r\n              <span>Popularity:</span>\r\n              {data.person.popularity}\r\n            </section>\r\n\r\n            <section classNAme=\"actorMovie\">\r\n              <h1>Known for</h1>\r\n              {data.person.known_for.length\r\n                ? data.person.known_for.map((item) => (\r\n                    <Link to={`/${item.id}/${item.media_type}`}>\r\n                      <img\r\n                        src={`https://image.tmdb.org/t/p/w300/${item.poster_path}`}\r\n                      />\r\n                    </Link>\r\n                  ))\r\n                : \"\"}\r\n            </section>\r\n          </div>\r\n        </Profile>\r\n        <SearchPage></SearchPage>\r\n      </Container>\r\n    </>\r\n  ) : (\r\n    \"Loading..\"\r\n  );\r\n};\r\n\r\nexport default Actor;\r\n","C:\\React\\mwflix-upgrade\\src\\store\\modules\\MyList.js",["200","201","202","203"],"import { queryAllByAttribute } from \"@testing-library/react\";\r\nimport { authService, storeService } from \"../../fbase\";\r\n\r\nconst POP = \"POP\";\r\nconst PUSH = \"PUSH\";\r\nconst BUNCHPUSH = \"BUNCHPUSH\";\r\n\r\nexport const myListActionCreator = {\r\n  dataPop: (id) => ({ type: POP, id }),\r\n  dataPush: (id, content) => ({ type: PUSH, id, content }),\r\n  dataBunchPush: (data) => ({ type: BUNCHPUSH, data }), // data엔 배열이 들어온다.\r\n};\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case PUSH:\r\n      return [{ id: action.id, content: action.content }, ...state];\r\n    case POP:\r\n      return state.filter((item) => item.id !== action.id);\r\n    case BUNCHPUSH:\r\n      return [...action.data, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":20,"column":6,"nodeType":"214","endLine":20,"endColumn":8,"suggestions":"215"},{"ruleId":"208","severity":1,"message":"216","line":6,"column":3,"nodeType":"210","messageId":"211","endLine":6,"endColumn":11},{"ruleId":"208","severity":1,"message":"217","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":17},{"ruleId":"208","severity":1,"message":"218","line":272,"column":9,"nodeType":"210","messageId":"211","endLine":272,"endColumn":19},{"ruleId":"208","severity":1,"message":"219","line":300,"column":23,"nodeType":"210","messageId":"211","endLine":300,"endColumn":32},{"ruleId":"212","severity":1,"message":"220","line":394,"column":6,"nodeType":"214","endLine":394,"endColumn":8,"suggestions":"221"},{"ruleId":"212","severity":1,"message":"222","line":403,"column":13,"nodeType":"223","endLine":421,"endColumn":4},{"ruleId":"224","severity":1,"message":"225","line":428,"column":13,"nodeType":"226","endLine":433,"endColumn":14},{"ruleId":"227","severity":1,"message":"228","line":436,"column":11,"nodeType":"226","endLine":442,"endColumn":12},{"ruleId":"229","severity":1,"message":"230","line":461,"column":19,"nodeType":"231","messageId":"232","endLine":461,"endColumn":21},{"ruleId":"227","severity":1,"message":"228","line":470,"column":25,"nodeType":"226","endLine":472,"endColumn":27},{"ruleId":"229","severity":1,"message":"230","line":481,"column":19,"nodeType":"231","messageId":"232","endLine":481,"endColumn":21},{"ruleId":"227","severity":1,"message":"228","line":489,"column":23,"nodeType":"226","endLine":491,"endColumn":25},{"ruleId":"229","severity":1,"message":"230","line":496,"column":19,"nodeType":"231","messageId":"232","endLine":496,"endColumn":21},{"ruleId":"227","severity":1,"message":"228","line":505,"column":25,"nodeType":"226","endLine":507,"endColumn":27},{"ruleId":"229","severity":1,"message":"230","line":527,"column":19,"nodeType":"231","messageId":"232","endLine":527,"endColumn":21},{"ruleId":"227","severity":1,"message":"228","line":536,"column":25,"nodeType":"226","endLine":538,"endColumn":27},{"ruleId":"229","severity":1,"message":"230","line":546,"column":19,"nodeType":"231","messageId":"232","endLine":546,"endColumn":21},{"ruleId":"227","severity":1,"message":"228","line":554,"column":23,"nodeType":"226","endLine":556,"endColumn":25},{"ruleId":"229","severity":1,"message":"230","line":561,"column":19,"nodeType":"231","messageId":"232","endLine":561,"endColumn":21},{"ruleId":"227","severity":1,"message":"228","line":570,"column":25,"nodeType":"226","endLine":572,"endColumn":27},{"ruleId":"227","severity":1,"message":"228","line":600,"column":25,"nodeType":"226","endLine":602,"endColumn":27},{"ruleId":"227","severity":1,"message":"228","line":618,"column":23,"nodeType":"226","endLine":620,"endColumn":25},{"ruleId":"227","severity":1,"message":"228","line":634,"column":25,"nodeType":"226","endLine":636,"endColumn":27},{"ruleId":"208","severity":1,"message":"233","line":1,"column":28,"nodeType":"210","messageId":"211","endLine":1,"endColumn":34},{"ruleId":"208","severity":1,"message":"217","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":17},{"ruleId":"208","severity":1,"message":"234","line":14,"column":10,"nodeType":"210","messageId":"211","endLine":14,"endColumn":21},{"ruleId":"212","severity":1,"message":"220","line":218,"column":6,"nodeType":"214","endLine":218,"endColumn":8,"suggestions":"235"},{"ruleId":"212","severity":1,"message":"222","line":227,"column":13,"nodeType":"223","endLine":247,"endColumn":4},{"ruleId":"208","severity":1,"message":"219","line":361,"column":23,"nodeType":"210","messageId":"211","endLine":361,"endColumn":32},{"ruleId":"224","severity":1,"message":"225","line":444,"column":13,"nodeType":"226","endLine":449,"endColumn":14},{"ruleId":"227","severity":1,"message":"228","line":452,"column":11,"nodeType":"226","endLine":458,"endColumn":12},{"ruleId":"227","severity":1,"message":"228","line":486,"column":25,"nodeType":"226","endLine":488,"endColumn":27},{"ruleId":"227","severity":1,"message":"228","line":504,"column":23,"nodeType":"226","endLine":506,"endColumn":25},{"ruleId":"227","severity":1,"message":"228","line":520,"column":25,"nodeType":"226","endLine":522,"endColumn":27},{"ruleId":"227","severity":1,"message":"228","line":550,"column":25,"nodeType":"226","endLine":552,"endColumn":27},{"ruleId":"227","severity":1,"message":"228","line":568,"column":23,"nodeType":"226","endLine":570,"endColumn":25},{"ruleId":"227","severity":1,"message":"228","line":584,"column":25,"nodeType":"226","endLine":586,"endColumn":27},{"ruleId":"227","severity":1,"message":"228","line":614,"column":25,"nodeType":"226","endLine":616,"endColumn":27},{"ruleId":"227","severity":1,"message":"228","line":632,"column":23,"nodeType":"226","endLine":634,"endColumn":25},{"ruleId":"227","severity":1,"message":"228","line":648,"column":25,"nodeType":"226","endLine":650,"endColumn":27},{"ruleId":"208","severity":1,"message":"217","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":17},{"ruleId":"208","severity":1,"message":"233","line":1,"column":28,"nodeType":"210","messageId":"211","endLine":1,"endColumn":34},{"ruleId":"208","severity":1,"message":"217","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":17},{"ruleId":"208","severity":1,"message":"236","line":14,"column":3,"nodeType":"210","messageId":"211","endLine":14,"endColumn":16},{"ruleId":"212","severity":1,"message":"220","line":406,"column":6,"nodeType":"214","endLine":406,"endColumn":8,"suggestions":"237"},{"ruleId":"212","severity":1,"message":"222","line":408,"column":13,"nodeType":"223","endLine":430,"endColumn":4},{"ruleId":"227","severity":1,"message":"228","line":479,"column":21,"nodeType":"226","endLine":482,"endColumn":23},{"ruleId":"227","severity":1,"message":"228","line":517,"column":19,"nodeType":"226","endLine":520,"endColumn":21},{"ruleId":"208","severity":1,"message":"217","line":2,"column":8,"nodeType":"210","messageId":"211","endLine":2,"endColumn":17},{"ruleId":"208","severity":1,"message":"238","line":6,"column":10,"nodeType":"210","messageId":"211","endLine":6,"endColumn":27},{"ruleId":"208","severity":1,"message":"239","line":10,"column":10,"nodeType":"210","messageId":"211","endLine":10,"endColumn":29},{"ruleId":"208","severity":1,"message":"240","line":30,"column":9,"nodeType":"210","messageId":"211","endLine":30,"endColumn":13},{"ruleId":"241","severity":1,"message":"242","line":13,"column":1,"nodeType":"243","endLine":22,"endColumn":3},{"ruleId":"241","severity":1,"message":"242","line":9,"column":1,"nodeType":"243","endLine":18,"endColumn":3},{"ruleId":"208","severity":1,"message":"217","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":17},{"ruleId":"208","severity":1,"message":"217","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":17},{"ruleId":"208","severity":1,"message":"217","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":17},{"ruleId":"208","severity":1,"message":"244","line":5,"column":10,"nodeType":"210","messageId":"211","endLine":5,"endColumn":21},{"ruleId":"212","severity":1,"message":"245","line":639,"column":6,"nodeType":"214","endLine":639,"endColumn":13,"suggestions":"246"},{"ruleId":"212","severity":1,"message":"222","line":650,"column":13,"nodeType":"223","endLine":685,"endColumn":4},{"ruleId":"227","severity":1,"message":"228","line":715,"column":23,"nodeType":"226","endLine":717,"endColumn":25},{"ruleId":"227","severity":1,"message":"228","line":738,"column":23,"nodeType":"226","endLine":740,"endColumn":25},{"ruleId":"227","severity":1,"message":"228","line":756,"column":17,"nodeType":"226","endLine":756,"endColumn":121},{"ruleId":"227","severity":1,"message":"228","line":768,"column":25,"nodeType":"226","endLine":770,"endColumn":27},{"ruleId":"227","severity":1,"message":"228","line":791,"column":21,"nodeType":"226","endLine":797,"endColumn":22},{"ruleId":"227","severity":1,"message":"228","line":809,"column":17,"nodeType":"226","endLine":809,"endColumn":121},{"ruleId":"227","severity":1,"message":"228","line":821,"column":23,"nodeType":"226","endLine":821,"endColumn":124},{"ruleId":"227","severity":1,"message":"228","line":830,"column":19,"nodeType":"226","endLine":830,"endColumn":123},{"ruleId":"224","severity":1,"message":"225","line":850,"column":21,"nodeType":"226","endLine":855,"endColumn":22},{"ruleId":"227","severity":1,"message":"228","line":860,"column":19,"nodeType":"226","endLine":860,"endColumn":123},{"ruleId":"247","severity":1,"message":"248","line":897,"column":15,"nodeType":"226","endLine":900,"endColumn":16},{"ruleId":"208","severity":1,"message":"249","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":25},{"ruleId":"208","severity":1,"message":"217","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":17},{"ruleId":"208","severity":1,"message":"244","line":4,"column":19,"nodeType":"210","messageId":"211","endLine":4,"endColumn":30},{"ruleId":"241","severity":1,"message":"242","line":9,"column":1,"nodeType":"243","endLine":18,"endColumn":3},{"ruleId":"208","severity":1,"message":"217","line":2,"column":8,"nodeType":"210","messageId":"211","endLine":2,"endColumn":17},{"ruleId":"212","severity":1,"message":"222","line":164,"column":13,"nodeType":"223","endLine":175,"endColumn":4},{"ruleId":"227","severity":1,"message":"228","line":189,"column":21,"nodeType":"226","endLine":195,"endColumn":23},{"ruleId":"227","severity":1,"message":"228","line":238,"column":21,"nodeType":"226","endLine":244,"endColumn":23},{"ruleId":"208","severity":1,"message":"217","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":17},{"ruleId":"212","severity":1,"message":"222","line":66,"column":13,"nodeType":"223","endLine":70,"endColumn":4},{"ruleId":"227","severity":1,"message":"228","line":76,"column":11,"nodeType":"226","endLine":78,"endColumn":13},{"ruleId":"227","severity":1,"message":"228","line":97,"column":23,"nodeType":"226","endLine":99,"endColumn":25},{"ruleId":"208","severity":1,"message":"250","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":29},{"ruleId":"208","severity":1,"message":"234","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":21},{"ruleId":"208","severity":1,"message":"251","line":2,"column":23,"nodeType":"210","messageId":"211","endLine":2,"endColumn":35},{"ruleId":"241","severity":1,"message":"242","line":14,"column":1,"nodeType":"243","endLine":25,"endColumn":3},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"no-unused-vars","'Navigator' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logIn' and 'logOut'. Either include them or remove the dependency array. If 'logIn' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["254"],"'Redirect' is defined but never used.","'PropTypes' is defined but never used.","'imageDatas' is defined but never used.","'lastChild' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'MyList.length' and 'findData'. Either include them or remove the dependency array.",["255"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'authService' is defined but never used.",["256"],"'faBorderStyle' is defined but never used.",["257"],"'userActionCreator' is defined but never used.","'myListActionCreator' is defined but never used.","'user' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'cards', 'change', 'direction', and 'width'. Either include them or remove the dependency array.",["258"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'useState' is defined but never used.","'queryAllByAttribute' is defined but never used.","'storeService' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"261","fix":"263"},{"desc":"261","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [logIn, logOut]",{"range":"267","text":"268"},"Update the dependencies array to be: [MyList.length, findData]",{"range":"269","text":"270"},{"range":"271","text":"270"},{"range":"272","text":"270"},"Update the dependencies array to be: [cards, change, direction, index, width]",{"range":"273","text":"274"},[554,556],"[logIn, logOut]",[10925,10927],"[MyList.length, findData]",[5069,5071],[11232,11234],[15504,15511],"[cards, change, direction, index, width]"]