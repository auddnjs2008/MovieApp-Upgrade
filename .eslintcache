[{"C:\\React\\mwflix-upgrade\\src\\index.js":"1","C:\\React\\mwflix-upgrade\\src\\component\\App.js":"2","C:\\React\\mwflix-upgrade\\src\\component\\Router.js":"3","C:\\React\\mwflix-upgrade\\src\\routes\\Drama.js":"4","C:\\React\\mwflix-upgrade\\src\\routes\\Movie.js":"5","C:\\React\\mwflix-upgrade\\src\\component\\GlobalStyle.js":"6","C:\\React\\mwflix-upgrade\\src\\component\\Navigator.js":"7","C:\\React\\mwflix-upgrade\\src\\routes\\MyPage.js":"8","C:\\React\\mwflix-upgrade\\src\\routes\\Auth.js":"9","C:\\React\\mwflix-upgrade\\src\\store\\index.js":"10","C:\\React\\mwflix-upgrade\\src\\store\\configure.js":"11","C:\\React\\mwflix-upgrade\\src\\store\\modules\\index.js":"12","C:\\React\\mwflix-upgrade\\src\\store\\modules\\User.js":"13","C:\\React\\mwflix-upgrade\\src\\store\\modules\\Error.js":"14","C:\\React\\mwflix-upgrade\\src\\fbase.js":"15","C:\\React\\mwflix-upgrade\\src\\component\\SocialLogin.js":"16","C:\\React\\mwflix-upgrade\\src\\component\\ErrorMessage.js":"17","C:\\React\\mwflix-upgrade\\src\\api.js":"18","C:\\React\\mwflix-upgrade\\src\\routes\\Detail.js":"19","C:\\React\\mwflix-upgrade\\src\\component\\SearchForm.js":"20","C:\\React\\mwflix-upgrade\\src\\store\\modules\\Search.js":"21","C:\\React\\mwflix-upgrade\\src\\component\\SearchPage.js":"22","C:\\React\\mwflix-upgrade\\src\\routes\\Actor.js":"23","C:\\React\\mwflix-upgrade\\src\\store\\modules\\MyList.js":"24","C:\\React\\mwflix-upgrade\\src\\component\\SeasonBox.js":"25","C:\\React\\mwflix-upgrade\\src\\component\\PosterSlider.js":"26","C:\\React\\mwflix-upgrade\\src\\component\\HeaderPoster.js":"27","C:\\React\\mwflix-upgrade\\src\\component\\MyPagePoster.js":"28","C:\\React\\mwflix-upgrade\\src\\component\\DetailBook\\EndPage.js":"29","C:\\React\\mwflix-upgrade\\src\\component\\DetailBook\\CountryPage.js":"30","C:\\React\\mwflix-upgrade\\src\\component\\DetailBook\\RelatedPage.js":"31","C:\\React\\mwflix-upgrade\\src\\component\\DetailBook\\ActorPage.js":"32","C:\\React\\mwflix-upgrade\\src\\component\\DetailBook\\InfoPage.js":"33","C:\\React\\mwflix-upgrade\\src\\component\\DetailBook\\ProfilePage.js":"34"},{"size":280,"mtime":1611910108744,"results":"35","hashOfConfig":"36"},{"size":991,"mtime":1612424069727,"results":"37","hashOfConfig":"36"},{"size":1353,"mtime":1613435525486,"results":"38","hashOfConfig":"36"},{"size":5636,"mtime":1612486314945,"results":"39","hashOfConfig":"36"},{"size":5894,"mtime":1612486301898,"results":"40","hashOfConfig":"36"},{"size":785,"mtime":1612316745853,"results":"41","hashOfConfig":"36"},{"size":1898,"mtime":1612424445253,"results":"42","hashOfConfig":"36"},{"size":10518,"mtime":1613439647444,"results":"43","hashOfConfig":"36"},{"size":4267,"mtime":1612424534057,"results":"44","hashOfConfig":"36"},{"size":67,"mtime":1610624134605,"results":"45","hashOfConfig":"36"},{"size":190,"mtime":1610623972828,"results":"46","hashOfConfig":"36"},{"size":244,"mtime":1611541053511,"results":"47","hashOfConfig":"36"},{"size":474,"mtime":1612424674309,"results":"48","hashOfConfig":"36"},{"size":440,"mtime":1612424681904,"results":"49","hashOfConfig":"36"},{"size":652,"mtime":1611560037725,"results":"50","hashOfConfig":"36"},{"size":1489,"mtime":1612342084699,"results":"51","hashOfConfig":"36"},{"size":1975,"mtime":1613439945048,"results":"52","hashOfConfig":"36"},{"size":1912,"mtime":1612338133609,"results":"53","hashOfConfig":"36"},{"size":9333,"mtime":1612429049933,"results":"54","hashOfConfig":"36"},{"size":1656,"mtime":1612424473166,"results":"55","hashOfConfig":"36"},{"size":444,"mtime":1612424658619,"results":"56","hashOfConfig":"36"},{"size":7613,"mtime":1612429355773,"results":"57","hashOfConfig":"36"},{"size":3033,"mtime":1612426221174,"results":"58","hashOfConfig":"36"},{"size":687,"mtime":1612424627534,"results":"59","hashOfConfig":"36"},{"size":4020,"mtime":1612426461489,"results":"60","hashOfConfig":"36"},{"size":12884,"mtime":1613435701302,"results":"61","hashOfConfig":"36"},{"size":2542,"mtime":1612424341930,"results":"62","hashOfConfig":"36"},{"size":8525,"mtime":1613439908992,"results":"63","hashOfConfig":"36"},{"size":897,"mtime":1612404277008,"results":"64","hashOfConfig":"36"},{"size":4432,"mtime":1612426190722,"results":"65","hashOfConfig":"36"},{"size":4881,"mtime":1612426064938,"results":"66","hashOfConfig":"36"},{"size":6391,"mtime":1612426103740,"results":"67","hashOfConfig":"36"},{"size":3171,"mtime":1612426144429,"results":"68","hashOfConfig":"36"},{"size":3035,"mtime":1612424272324,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"88ab01",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\React\\mwflix-upgrade\\src\\index.js",[],["141","142"],"C:\\React\\mwflix-upgrade\\src\\component\\App.js",[],"C:\\React\\mwflix-upgrade\\src\\component\\Router.js",[],"C:\\React\\mwflix-upgrade\\src\\routes\\Drama.js",["143"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { dramaApi } from \"../api\";\r\nimport SearchPage from \"../component/SearchPage\";\r\nimport { storeService } from \"../fbase\";\r\nimport { queryAllByAttribute } from \"@testing-library/react\";\r\nimport { connect } from \"react-redux\";\r\nimport { myListActionCreator } from \"../store/modules/MyList\";\r\nimport PosterSlider from \"../component/PosterSlider\";\r\nimport HeaderPoster from \"../component/HeaderPoster\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n`;\r\nconst ContentWrapper = styled.div`\r\n  div.hoverBox {\r\n    background-color: rgba(20, 20, 20, 1);\r\n    border-radius: 20px;\r\n    width: 100px;\r\n    height: 130px;\r\n    color: white;\r\n    img.videoWrapper {\r\n      width: 50px;\r\n      height: 50px;\r\n    }\r\n    div.videoWrapper {\r\n      position: relative;\r\n      height: 0;\r\n      padding-bottom: 56.25%;\r\n      iframe {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    }\r\n    transform: translate(-25%, -25%);\r\n    @keyframes hoverMove {\r\n      0% {\r\n        transform: scale(1, 1);\r\n      }\r\n      100% {\r\n        transform: scale(3, 2);\r\n      }\r\n    }\r\n\r\n    animation: hoverMove 0.2s linear forwards;\r\n\r\n    h4 {\r\n      padding: 10px;\r\n      color: white;\r\n      font-size: 3px;\r\n      text-align: center;\r\n      margin: 5px 0px;\r\n      // padding: 10px;\r\n    }\r\n    div {\r\n      display: flex;\r\n      justify-content: space-evenly;\r\n      align-items: center;\r\n      button {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 10px;\r\n        height: 10px;\r\n        border: none;\r\n        outline: none;\r\n        color: white;\r\n        background-color: rgba(64, 115, 158, 1);\r\n        border-radius: 5px;\r\n        &:active {\r\n          transform: scale(0.98, 0.98);\r\n        }\r\n      }\r\n      a {\r\n        font-size: 10px;\r\n        border: 1px solid rgba(64, 115, 158, 1);\r\n        padding: 3px;\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n        &:active {\r\n          transform: scale(0.99, 0.99);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SectionWrapper = styled.section`\r\n  position: relative;\r\n  margin-bottom: 50px;\r\n  padding: 10px;\r\n\r\n  h1 {\r\n    color: white;\r\n    font-size: 25px;\r\n    margin-bottom: 20px;\r\n  }\r\n  &:hover {\r\n    div#left,\r\n    div#right {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Drama = ({ MyList, listPush, bunchPush, uid, errorText }) => {\r\n  const [data, setData] = useState({});\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [isMobile] = useState(\r\n    /iPhone|iPad|iPod|Android/i.test(window.navigator.userAgent)\r\n  );\r\n\r\n  const findData = useCallback(async () => {\r\n    let testArray = [];\r\n    const test = await storeService\r\n      .collection(`mwFlix-${uid}`)\r\n      .get(queryAllByAttribute);\r\n\r\n    test.forEach((item) =>\r\n      testArray.push({\r\n        id: parseInt(item.data().id),\r\n        content: item.data().type,\r\n      })\r\n    );\r\n\r\n    bunchPush(testArray);\r\n  }, [bunchPush, uid]);\r\n\r\n  const getData = async () => {\r\n    const {\r\n      data: { results: popular },\r\n    } = await dramaApi.popular();\r\n\r\n    const {\r\n      data: { results: onAir },\r\n    } = await dramaApi.onAir();\r\n\r\n    const {\r\n      data: { results: topRated },\r\n    } = await dramaApi.topRated();\r\n\r\n    const Random = Math.floor(Math.random() * (onAir.length - 1)) + 1;\r\n    const latestVideo = (await dramaApi.videos(parseInt(onAir[Random].id))).data\r\n      .results;\r\n    const latest = onAir[Random];\r\n    setData({ popular, onAir, topRated, latest, latestVideo });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!MyList.length) findData(); // 처음 로그인하고  화면들어올때만  셋팅을 해준다.\r\n  }, [findData]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => setWidth(window.innerWidth));\r\n\r\n    return () =>\r\n      window.removeEventListener(\"resize\", () => setWidth(window.innerWidth));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return Object.keys(data).length !== 0 ? (\r\n    <Container>\r\n      <HeaderPoster\r\n        video={data[\"latestVideo\"]}\r\n        data={data[\"latest\"]}\r\n        width={width}\r\n        type={\"tv\"}\r\n      />\r\n\r\n      <ContentWrapper className=\"content\">\r\n        <SectionWrapper>\r\n          <h1>Popular Drama</h1>\r\n          <PosterSlider\r\n            data={data[\"popular\"]}\r\n            isMobile={isMobile}\r\n            type=\"tv\"\r\n          ></PosterSlider>\r\n        </SectionWrapper>\r\n\r\n        <SectionWrapper>\r\n          <h1>onAir</h1>\r\n          <PosterSlider\r\n            data={data[\"onAir\"]}\r\n            isMobile={isMobile}\r\n            type=\"tv\"\r\n          ></PosterSlider>\r\n        </SectionWrapper>\r\n        <SectionWrapper>\r\n          <h1>Top-Rated</h1>\r\n          <PosterSlider\r\n            data={data[\"topRated\"]}\r\n            isMobile={isMobile}\r\n            type=\"tv\"\r\n          ></PosterSlider>\r\n        </SectionWrapper>\r\n      </ContentWrapper>\r\n      <SearchPage></SearchPage>\r\n    </Container>\r\n  ) : (\r\n    \"Loading...\"\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { MyList: state.MyList, uid: state.User.user.uid };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    bunchPush: (data) => dispatch(myListActionCreator.dataBunchPush(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Drama);\r\n\r\nDrama.propTypes = {\r\n  MyList: PropTypes.array,\r\n  bunchPush: PropTypes.func,\r\n  uid: PropTypes.string,\r\n};\r\n","C:\\React\\mwflix-upgrade\\src\\routes\\Movie.js",["144"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { moviesApi } from \"../api\";\r\n\r\nimport SearchPage from \"../component/SearchPage\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { myListActionCreator } from \"../store/modules/MyList\";\r\nimport { storeService } from \"../fbase\";\r\nimport { queryAllByAttribute } from \"@testing-library/react\";\r\nimport PosterSlider from \"../component/PosterSlider\";\r\nimport HeaderPoster from \"../component/HeaderPoster\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  div.hoverBox {\r\n    background-color: rgba(20, 20, 20, 1);\r\n    border-radius: 20px;\r\n    width: 100px;\r\n    height: 130px;\r\n    color: white;\r\n    img.videoWrapper {\r\n      width: 50px;\r\n      height: 50px;\r\n    }\r\n    div.videoWrapper {\r\n      position: relative;\r\n      height: 0;\r\n      padding-bottom: 56.25%;\r\n      iframe {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    }\r\n    transform: translate(-25%, -25%);\r\n    @keyframes hoverMove {\r\n      0% {\r\n        transform: scale(1, 1);\r\n      }\r\n      100% {\r\n        transform: scale(3, 2);\r\n      }\r\n    }\r\n\r\n    animation: hoverMove 0.2s linear forwards;\r\n\r\n    h4 {\r\n      padding: 10px;\r\n      color: white;\r\n      font-size: 3px;\r\n      text-align: center;\r\n      margin: 5px 0px;\r\n      // padding: 10px;\r\n    }\r\n    div {\r\n      display: flex;\r\n      justify-content: space-evenly;\r\n      align-items: center;\r\n      button {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 10px;\r\n        height: 10px;\r\n        border: none;\r\n        outline: none;\r\n        color: white;\r\n        background-color: rgba(64, 115, 158, 1);\r\n        border-radius: 5px;\r\n        &:active {\r\n          transform: scale(0.98, 0.98);\r\n        }\r\n      }\r\n      a {\r\n        font-size: 10px;\r\n        border: 1px solid rgba(64, 115, 158, 1);\r\n        padding: 3px;\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n        &:active {\r\n          transform: scale(0.99, 0.99);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst SectionWrapper = styled.section`\r\n  position: relative;\r\n\r\n  margin-bottom: 50px;\r\n  padding: 10px;\r\n  h1 {\r\n    color: white;\r\n    font-size: 25px;\r\n    margin-bottom: 20px;\r\n  }\r\n  &:hover {\r\n    div#left,\r\n    div#right {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Movie = ({ MyList, bunchPush, uid }) => {\r\n  const [data, setData] = useState({}); // popular, nowPlaying upComing  -> data.results에 존재\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  const [isMobile] = useState(\r\n    /iPhone|iPad|iPod|Android/i.test(window.navigator.userAgent)\r\n  );\r\n\r\n  const findData = useCallback(async () => {\r\n    let testArray = [];\r\n    const test = await storeService\r\n      .collection(`mwFlix-${uid}`)\r\n      .get(queryAllByAttribute);\r\n\r\n    test.forEach((item) =>\r\n      testArray.push({\r\n        id: parseInt(item.data().id),\r\n        content: item.data().type,\r\n      })\r\n    );\r\n\r\n    bunchPush(testArray);\r\n  }, [bunchPush, uid]);\r\n\r\n  const getData = async () => {\r\n    const {\r\n      data: { results: popular },\r\n    } = await moviesApi.popular();\r\n\r\n    const {\r\n      data: { results: nowPlaying },\r\n    } = await moviesApi.nowPlaying();\r\n\r\n    const {\r\n      data: { results: upComing },\r\n    } = await moviesApi.upComing();\r\n\r\n    const Random = Math.floor(Math.random() * (nowPlaying.length - 1)) + 1;\r\n    const latestVideo = (\r\n      await moviesApi.videos(parseInt(nowPlaying[Random].id))\r\n    ).data.results;\r\n    const latest = nowPlaying[Random];\r\n\r\n    setData({ popular, nowPlaying, upComing, latest, latestVideo });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!MyList.length) findData(); // 처음 로그인하고  화면들어올때만  셋팅을 해준다.\r\n  }, [findData]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => setWidth(window.innerWidth));\r\n\r\n    return () =>\r\n      window.removeEventListener(\"resize\", () => setWidth(window.innerWidth));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  // 포스터 위에 마우스를 올렸을때  영상이 재생되게 하는 함수 필요(영상데이터를 가져와야 한다.\r\n\r\n  return Object.keys(data).length !== 0 ? (\r\n    <Container>\r\n      <HeaderPoster\r\n        video={data[\"latestVideo\"]}\r\n        data={data[\"latest\"]}\r\n        width={width}\r\n        type=\"movie\"\r\n      ></HeaderPoster>\r\n\r\n      <ContentWrapper className=\"content\">\r\n        <SectionWrapper>\r\n          <h1>Popular Movie</h1>\r\n          <PosterSlider\r\n            data={data[\"popular\"]}\r\n            isMobile={isMobile}\r\n            type={\"movie\"}\r\n          ></PosterSlider>\r\n        </SectionWrapper>\r\n        <SectionWrapper>\r\n          <h1>Now Playing</h1>\r\n          <PosterSlider\r\n            data={data[\"nowPlaying\"]}\r\n            isMobile={isMobile}\r\n            type={\"movie\"}\r\n          ></PosterSlider>\r\n        </SectionWrapper>\r\n        <SectionWrapper>\r\n          <h1>UpComing</h1>\r\n          <PosterSlider\r\n            data={data[\"upComing\"]}\r\n            isMobile={isMobile}\r\n            type={\"movie\"}\r\n          ></PosterSlider>\r\n        </SectionWrapper>\r\n      </ContentWrapper>\r\n      <SearchPage></SearchPage>\r\n    </Container>\r\n  ) : (\r\n    \"Loading..\"\r\n  );\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { MyList: state.MyList, uid: state.User.user.uid };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    bunchPush: (data) => dispatch(myListActionCreator.dataBunchPush(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);\r\n\r\nMovie.propTypes = {\r\n  MyList: PropTypes.array,\r\n  bunchPush: PropTypes.func,\r\n  uid: PropTypes.string,\r\n};\r\n","C:\\React\\mwflix-upgrade\\src\\component\\GlobalStyle.js",[],"C:\\React\\mwflix-upgrade\\src\\component\\Navigator.js",[],"C:\\React\\mwflix-upgrade\\src\\routes\\MyPage.js",[],"C:\\React\\mwflix-upgrade\\src\\routes\\Auth.js",[],"C:\\React\\mwflix-upgrade\\src\\store\\index.js",[],"C:\\React\\mwflix-upgrade\\src\\store\\configure.js",[],"C:\\React\\mwflix-upgrade\\src\\store\\modules\\index.js",[],"C:\\React\\mwflix-upgrade\\src\\store\\modules\\User.js",[],"C:\\React\\mwflix-upgrade\\src\\store\\modules\\Error.js",[],"C:\\React\\mwflix-upgrade\\src\\fbase.js",[],"C:\\React\\mwflix-upgrade\\src\\component\\SocialLogin.js",[],"C:\\React\\mwflix-upgrade\\src\\component\\ErrorMessage.js",["145"],"C:\\React\\mwflix-upgrade\\src\\api.js",[],"C:\\React\\mwflix-upgrade\\src\\routes\\Detail.js",[],"C:\\React\\mwflix-upgrade\\src\\component\\SearchForm.js",[],"C:\\React\\mwflix-upgrade\\src\\store\\modules\\Search.js",[],"C:\\React\\mwflix-upgrade\\src\\component\\SearchPage.js",[],"C:\\React\\mwflix-upgrade\\src\\routes\\Actor.js",[],"C:\\React\\mwflix-upgrade\\src\\store\\modules\\MyList.js",[],"C:\\React\\mwflix-upgrade\\src\\component\\SeasonBox.js",[],"C:\\React\\mwflix-upgrade\\src\\component\\PosterSlider.js",["146"],"C:\\React\\mwflix-upgrade\\src\\component\\HeaderPoster.js",[],"C:\\React\\mwflix-upgrade\\src\\component\\MyPagePoster.js",["147"],"C:\\React\\mwflix-upgrade\\src\\component\\DetailBook\\EndPage.js",[],"C:\\React\\mwflix-upgrade\\src\\component\\DetailBook\\CountryPage.js",[],"C:\\React\\mwflix-upgrade\\src\\component\\DetailBook\\RelatedPage.js",[],"C:\\React\\mwflix-upgrade\\src\\component\\DetailBook\\ActorPage.js",[],"C:\\React\\mwflix-upgrade\\src\\component\\DetailBook\\InfoPage.js",[],"C:\\React\\mwflix-upgrade\\src\\component\\DetailBook\\ProfilePage.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":155,"column":6,"nodeType":"154","endLine":155,"endColumn":16,"suggestions":"155"},{"ruleId":"152","severity":1,"message":"153","line":160,"column":6,"nodeType":"154","endLine":160,"endColumn":16,"suggestions":"156"},{"ruleId":"152","severity":1,"message":"157","line":51,"column":6,"nodeType":"154","endLine":51,"endColumn":17,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"157","line":218,"column":6,"nodeType":"154","endLine":218,"endColumn":17,"suggestions":"163"},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'MyList.length'. Either include it or remove the dependency array.","ArrayExpression",["166"],["167"],"React Hook useEffect has a missing dependency: 'clearError'. Either include it or remove the dependency array. If 'clearError' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["168"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["169"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"170","fix":"172"},{"desc":"173","fix":"174"},{"desc":"173","fix":"175"},"Update the dependencies array to be: [MyList.length, findData]",{"range":"176","text":"177"},{"range":"178","text":"177"},"Update the dependencies array to be: [clearError, errorText]",{"range":"179","text":"180"},{"range":"181","text":"180"},[3819,3829],"[MyList.length, findData]",[3900,3910],[1228,1239],"[clearError, errorText]",[6207,6218]]